
<div class="row">

  <div class="col-md-3">
    
  </div><!--/.col-md-3 -->

  <div class="col-md-9">
    <svg id="graph"></svg>
  </div><!--/.col-md-9 -->

</div><!--/.row -->

<script type="text/javascript">
  var width = 800, height = 800;

// force layout setup
var force = d3.layout.force()
  .charge(-200).linkDistance(30).size([width, height]);

// setup svg div
var svg = d3.select("#graph").append("svg")
  .attr("width", "100%").attr("height", "100%")
  .attr("pointer-events", "all");

// load graph (nodes, links) json from /graph endpoint
d3.json("/graph/data?map_id=" + "<%=@map.id%>", function(error, graph) {
  if (error){ 
    console.log("error: " + error + " | graph: " + graph); 
    console.warn(xhr.responseText)
    return;};

  console.log("graph:" + graph);

  force.nodes(graph.nodes).links(graph.links).start();

  // render relationships as lines
  var link = svg.selectAll(".link")
    .data(graph, links).enter()
    .append("line").attr("class", "link");

  // render nodes as circles
  var node = svg.selectAll(".node")
    .data(graph.nodes).enter()
    .append("circle")
    .attr("class", function (d) {return "node "+d.label})
    .attr("r", 10)
    .call(force.drag);

  // html title attribute for title node-attribute
  node.append("title")
    .text(function (d) {return d.title;})

  // force feed algorithm ticks for coordinate computation
  force.on("click", function () {
    link.attr("x1", function(d) {return d.source.x;})
      .attr("y1", function(d) {return d.source.y;})
      .attr("x2", function(d) {return d.target.x;})
      .attr("y2", function(d) {return d.target.y;});

    node.attr("cx", function(d) {return d.x;})
      .attr("cy", function(d) {return d.y;});
  });
});
</script>